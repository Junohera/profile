{"version":3,"sources":["image/home/profile.JPG","common/const.js","routes/Home.js","routes/Expearience.js","routes/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CONST","APP","PATH","root","Home","Expearience","HOME","numberMap","Day","_ref2","name","day","react_default","a","createElement","state","dayList","id","_renderDayList","_this","map","key","computeAge","_ref","setState","Object","objectSpread","diff","Date","getTime","Math","ceil","this","className","src","profileImage","React","Component","NotFound","App","_getPath","menu","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4c08f49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.ed7f47bf.JPG\";","const CONST = {\n  APP: {\n      // react router path definition\n      PATH: { \n        // root: '', \n        root: '/profile',  // repository name\n\n        Home: '/',\n        Expearience: '/expearience',\n      }\n  },\n  HOME: {\n    numberMap: [\n      '1994-11-10', //start life\n      '2018-01-05', //start dev\n      '2018-08-15' //start tooth\n    ]\n  },\n\n}\nexport default CONST","import React from 'react';\nimport profileImage from \"../image/home/profile.JPG\";\nimport './Home.css';\nimport CONST from '../common/const';\n\nclass Home extends React.Component{\n\n    // TODO: 기준날짜로부터 오늘 날짜 0 부터 애니메이션\n    state = {\n        dayList: [{\n            id: 0,\n            name: 'age',\n            day: 0.\n          },\n          {\n            id: 1,\n            name: 'devAge',\n            day: 0\n          },\n          {\n            id: 2,\n            name: 'tooth',\n            day: 0\n          }\n        ]\n    }\n\n    _renderDayList = () => {\n        const dayList = this.state.dayList.map(\n            day => {\n                return <Day \n                    key={day.id}\n                    name={day.name}\n                    day={day.day}\n                />\n            }\n        )\n        return dayList;\n    }\n\n    componentDidMount() {\n        this.computeAge(CONST.HOME);\n    }\n\n    computeAge = ({numberMap}) => {\n        const { dayList } = this.state;\n        this.setState({\n            dayList: dayList.map(\n                  day => {\n                      return {\n                          ...day,\n                          day:(() => {\n                              let diff = new Date().getTime() - new Date(numberMap[day.id]).getTime();\n                            //   return diff/(1000 * 3600 * 24)\n                              return Math.ceil(diff/(1000 * 3600 * 24));\n                          })()\n                          \n                      }\n                  }\n              )\n        })\n    }\n\n    \n    \n\n    render() {\n        return (\n            <div>\n    \n                <div className=\"Profile_triangle\">\n                    <div className=\"shape\"></div>\n                </div>\n            \n                <div className=\"Profile\">\n    \n                    <div className=\"Profile_left\">\n                        <div></div>\n                        <img src={profileImage}></img>\n                    </div>\n    \n                    <div className=\"Profile_center\">\n                        <h1><span>Juno</span>'s profile</h1>\n                    </div>\n    \n                    <div className=\"Profile_right\">\n                    <div className=\"content\">\n                        <ul>\n                            {this._renderDayList()}\n                        </ul>\n                        <p>ABOUT</p>\n                        <p>\n                            안녕하세요 26살 개발자 주노입니다.<br/>\n                            이 페이지는 개발자인 저를 소개하는 동시에 저의 개인 프로필페이지입니다.<br/>\n                            강의, 커뮤니티, 컨퍼런스 등과 같이, 채용 목적이 아니더라도<br/>\n                            자유롭게 둘러보시고, 공개된 정보로 연락을 취하셔도 무방합니다.<br/>\n                            어차피 답장은 저의 몫이니까요 ^-^...;;<br/>\n                        </p>\n                    </div>\n                    <div className=\"dim\"></div>\n                    <div className=\"border\"></div>\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n    \n};\n\n\n\nfunction Day({name, day}){\n    return (\n        <li>\n            <p>{day}</p>\n            <p>{name}</p>\n        </li>\n    );\n};\n\nexport default Home;","import React from 'react';\n\nconst Expearience = () => {\n    return (\n        <div>\n            Expearience\n        </div>\n    );\n};\n\nexport default Expearience;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div>\n            404 - not Found\n        </div>\n    );\n};\n\nexport default NotFound;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//const\nimport CONST from './common/const';\n\n// content\nimport Home from './routes/Home';\nimport Expearience from './routes/Expearience';\nimport NotFound from './routes/NotFound';\n\n// common\nimport Header from './components/Header';\nclass App extends Component {\n\n  _getPath = (menu) => {\n    const PATH = {...CONST.APP.PATH};\n    return PATH['root'] + PATH[menu];\n  }\n\n  render() {\n    \n    return (\n      <Router>\n        <div>\n          {/* <Header/> */}\n          <div>\n            <Switch>\n              <Route exact path={this._getPath('Home')} component={Home} />\n              <Route path={this._getPath('Expearience')} component={Expearience} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}